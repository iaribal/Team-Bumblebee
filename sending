#include <XBee.h>
//sending packet from arduino to breadboard atmega
XBee xbee = XBee();
int Led=13;
ZBTxStatusResponse txStatus = ZBTxStatusResponse();

void setup() {

  Serial.begin(9600);
  //pinMode(led, output); //for blinking light
  xbee.setSerial(Serial);

}

void loop() {

  uint8_t data[] = {"The quick brown fox jumps over the lazy dog"};

  XBeeAddress64 addr64 = XBeeAddress64(0x0013A200,0x40E95CCC); //SH and SL of the recieving xbee...something like this (0x0013A200, 0x40E95C53) bumblee3

  ZBTxRequest zbTx = ZBTxRequest(addr64, data, sizeof(data));

  xbee.send(zbTx);

  delay(6000);
 

// getting a status response
if (xbee.readPacket(500)) {
    // got a response!

    // should be a znet tx status              
    if (xbee.getResponse().getApiId() == ZB_TX_STATUS_RESPONSE) {
      xbee.getResponse().getZBTxStatusResponse(txStatus);

      // get the delivery status, the fifth byte blink once
      if (txStatus.getDeliveryStatus() == SUCCESS) {
        digitalWrite(Led, HIGH);
        delay(100);
        digitalWrite(Led, LOW);
        delay(100);
        Serial.println("Got it!");  
      } else {
        // the remote XBee did not receive our packet. is it powered on? blink twice
        digitalWrite(Led, HIGH);
        delay(100);
        digitalWrite(Led, LOW);
        delay(100);
        digitalWrite(Led, HIGH);
        delay(100);
        digitalWrite(Led, LOW);
        delay(100);
        Serial.println("Did not recieve");  
      }
    }
    
    //error recieving the packet
  } else if (xbee.getResponse().isError()) {
      Serial.println("Error reading packet.  Error code: ");  
      Serial.println(xbee.getResponse().getErrorCode());
      
  } else {
    // local XBee did not provide a timely TX Status Response -- should not happen
        digitalWrite(Led, HIGH);
        delay(100);
        digitalWrite(Led, LOW);
        delay(100);
         digitalWrite(Led, HIGH);
        delay(100);
        digitalWrite(Led, LOW);
        delay(100);
        digitalWrite(Led, HIGH);
        delay(100);
        digitalWrite(Led, LOW);
        delay(100);
  }
  
}

